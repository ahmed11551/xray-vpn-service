#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Xray —Å–µ—Ä–≤–µ—Ä–æ–≤

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
LOG_FILE="/var/log/xray/monitoring.log"
ALERT_EMAIL="admin@example.com"
TELEGRAM_BOT_TOKEN="${TELEGRAM_BOT_TOKEN}"
TELEGRAM_CHAT_ID="${TELEGRAM_CHAT_ID}"

# –ü–æ—Ä–æ–≥–∏ –¥–ª—è –∞–ª–µ—Ä—Ç–æ–≤
CPU_THRESHOLD=80
MEMORY_THRESHOLD=85
DISK_THRESHOLD=90
CONNECTION_THRESHOLD=1000
ERROR_THRESHOLD=50

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–∞ –≤ Telegram
send_telegram_alert() {
    local message="$1"
    
    if [[ -n "$TELEGRAM_BOT_TOKEN" && -n "$TELEGRAM_CHAT_ID" ]]; then
        curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d text="üö® ALERT: $message" \
            -d parse_mode="HTML"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email –∞–ª–µ—Ä—Ç–∞
send_email_alert() {
    local subject="$1"
    local message="$2"
    
    echo "$message" | mail -s "$subject" "$ALERT_EMAIL"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CPU
check_cpu() {
    local cpu_usage=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | awk -F'%' '{print $1}')
    local cpu_int=$(printf "%.0f" "$cpu_usage")
    
    if [[ "$cpu_int" -gt "$CPU_THRESHOLD" ]]; then
        local message="–í—ã—Å–æ–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ CPU: ${cpu_usage}% (–ø–æ—Ä–æ–≥: ${CPU_THRESHOLD}%)"
        log "ALERT: $message"
        send_telegram_alert "$message"
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–º—è—Ç–∏
check_memory() {
    local memory_usage=$(free | grep Mem | awk '{printf "%.0f", $3/$2 * 100.0}')
    
    if [[ "$memory_usage" -gt "$MEMORY_THRESHOLD" ]]; then
        local message="–í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${memory_usage}% (–ø–æ—Ä–æ–≥: ${MEMORY_THRESHOLD}%)"
        log "ALERT: $message"
        send_telegram_alert "$message"
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∏—Å–∫–∞
check_disk() {
    local disk_usage=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
    
    if [[ "$disk_usage" -gt "$DISK_THRESHOLD" ]]; then
        local message="–í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: ${disk_usage}% (–ø–æ—Ä–æ–≥: ${DISK_THRESHOLD}%)"
        log "ALERT: $message"
        send_telegram_alert "$message"
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
check_connections() {
    local connections=$(netstat -an | grep :443 | wc -l)
    
    if [[ "$connections" -gt "$CONNECTION_THRESHOLD" ]]; then
        local message="–ú–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π: $connections (–ø–æ—Ä–æ–≥: $CONNECTION_THRESHOLD)"
        log "ALERT: $message"
        send_telegram_alert "$message"
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö
check_errors() {
    local error_count=$(tail -n 1000 /var/log/xray/error.log | grep -c "ERROR" || true)
    
    if [[ "$error_count" -gt "$ERROR_THRESHOLD" ]]; then
        local message="–ú–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö: $error_count –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 1000 —Å—Ç—Ä–æ–∫ (–ø–æ—Ä–æ–≥: $ERROR_THRESHOLD)"
        log "ALERT: $message"
        send_telegram_alert "$message"
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
check_service_status() {
    if ! systemctl is-active --quiet xray; then
        local message="–°–µ—Ä–≤–∏—Å Xray –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        log "ALERT: $message"
        send_telegram_alert "$message"
        
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
        log "–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ Xray"
        systemctl restart xray
        sleep 10
        
        if systemctl is-active --quiet xray; then
            log "–°–µ—Ä–≤–∏—Å Xray —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
            send_telegram_alert "‚úÖ –°–µ—Ä–≤–∏—Å Xray –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
        else
            log "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å Xray"
            send_telegram_alert "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å Xray"
        fi
        
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    local ports=(443 80 8080)
    
    for port in "${ports[@]}"; do
        if ! timeout 5 bash -c "</dev/tcp/localhost/$port" 2>/dev/null; then
            local message="–ü–æ—Ä—Ç $port –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!"
            log "ALERT: $message"
            send_telegram_alert "$message"
            return 1
        fi
    done
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DNS
check_dns() {
    local domains=("vk.com" "yandex.ru" "google.com")
    
    for domain in "${domains[@]}"; do
        if ! nslookup "$domain" >/dev/null 2>&1; then
            local message="–ü—Ä–æ–±–ª–µ–º—ã —Å DNS —Ä–µ–∑–æ–ª—é—Ü–∏–µ–π –¥–ª—è $domain"
            log "ALERT: $message"
            send_telegram_alert "$message"
            return 1
        fi
    done
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
generate_report() {
    local report_file="/tmp/xray-monitoring-report-$(date +%Y%m%d-%H%M%S).txt"
    
    {
        echo "=== Xray Server Monitoring Report ==="
        echo "–î–∞—Ç–∞: $(date)"
        echo "–°–µ—Ä–≤–µ—Ä: $(hostname)"
        echo ""
        
        echo "=== –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã ==="
        echo "CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}')"
        echo "–ü–∞–º—è—Ç—å: $(free -h | grep Mem | awk '{print $3 "/" $2}')"
        echo "–î–∏—Å–∫: $(df -h / | tail -1 | awk '{print $5}')"
        echo ""
        
        echo "=== –°–µ—Ç–µ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è ==="
        echo "–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–∞ –ø–æ—Ä—Ç—É 443: $(netstat -an | grep :443 | wc -l)"
        echo "–û–±—â–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: $(netstat -an | wc -l)"
        echo ""
        
        echo "=== –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ ==="
        echo "Xray: $(systemctl is-active xray)"
        echo "Nginx: $(systemctl is-active nginx)"
        echo ""
        
        echo "=== –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ ==="
        tail -n 20 /var/log/xray/error.log | grep "ERROR" || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        
    } > "$report_file"
    
    echo "$report_file"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
main() {
    log "–ù–∞—á–∞–ª–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Xray —Å–µ—Ä–≤–µ—Ä–æ–≤"
    
    local alerts=0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    check_service_status || ((alerts++))
    check_ports || ((alerts++))
    check_cpu || ((alerts++))
    check_memory || ((alerts++))
    check_disk || ((alerts++))
    check_connections || ((alerts++))
    check_errors || ((alerts++))
    check_dns || ((alerts++))
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    local report_file=$(generate_report)
    log "–û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $report_file"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É
    if [[ "$alerts" -eq 0 ]]; then
        log "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    else
        log "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $alerts –ø—Ä–æ–±–ª–µ–º"
        send_telegram_alert "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $alerts –ø—Ä–æ–±–ª–µ–º –ø—Ä–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ —Å–µ—Ä–≤–µ—Ä–∞"
    fi
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
    find /tmp -name "xray-monitoring-report-*.txt" -mtime +7 -delete 2>/dev/null || true
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
