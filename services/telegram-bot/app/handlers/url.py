from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import logging

from app.services.user_service import UserService
from app.keyboards.main import get_url_keyboard, get_main_keyboard
from app.utils.formatters import format_vless_url

logger = logging.getLogger(__name__)
router = Router()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
user_service = UserService()

class URLStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å URL"""
    waiting_for_url_input = State()

@router.message(Command("url"))
async def cmd_url(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /url"""
    try:
        user_id = message.from_user.id
        user = await user_service.get_user_by_telegram_id(user_id)
        
        if not user:
            await message.answer(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
            )
            return
        
        url_text = f"""
üîó <b>–ü–æ–ª—É—á–µ–Ω–∏–µ URL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</b>

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø URL –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –Ω—É–∂–µ–Ω:

üåê <b>–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:</b>
‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: https://xray-vpn-service-seven.vercel.app/
‚Ä¢ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://xray-vpn-service-seven.vercel.app/docs

üì± <b>–ú–æ–±–∏–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã:</b>
‚Ä¢ v2rayNG (Android)
‚Ä¢ Shadowrocket (iOS)
‚Ä¢ Clash (Windows/Mac)

üíª <b>–î–µ—Å–∫—Ç–æ–ø–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã:</b>
‚Ä¢ Qv2ray (Windows/Mac/Linux)
‚Ä¢ Clash for Windows
‚Ä¢ v2rayN (Windows)

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
        """
        
        await message.answer(url_text, reply_markup=get_url_keyboard())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /url: {e}")
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )

@router.callback_query(F.data == "get_web_url")
async def get_web_url(callback: CallbackQuery):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ–±-URL"""
    try:
        web_urls = f"""
üåê <b>–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–µ—Ä–≤–∏—Å–∞</b>

üîó <b>–û—Å–Ω–æ–≤–Ω—ã–µ —Å—Å—ã–ª–∫–∏:</b>
‚Ä¢ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: https://xray-vpn-service-seven.vercel.app/
‚Ä¢ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://xray-vpn-service-seven.vercel.app/docs
‚Ä¢ –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞: https://xray-vpn-service-seven.vercel.app/health

üìä <b>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:</b>
‚Ä¢ Grafana: https://xray-vpn-service-seven.vercel.app/grafana
‚Ä¢ Prometheus: https://xray-vpn-service-seven.vercel.app/prometheus

üîß <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ:</b>
‚Ä¢ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: https://xray-vpn-service-seven.vercel.app/admin
‚Ä¢ –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã: https://xray-vpn-service-seven.vercel.app/logs

üí° <b>–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:</b>
‚Ä¢ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: https://xray-vpn-service-seven.vercel.app/guide
‚Ä¢ FAQ: https://xray-vpn-service-seven.vercel.app/faq
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: https://xray-vpn-service-seven.vercel.app/support
        """
        
        await callback.message.edit_text(web_urls, reply_markup=get_url_keyboard())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ–±-URL: {e}")
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è URL. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

@router.callback_query(F.data == "get_mobile_url")
async def get_mobile_url(callback: CallbackQuery):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö URL"""
    try:
        user_id = callback.from_user.id
        user = await user_service.get_user_by_telegram_id(user_id)
        
        if not user:
            await callback.message.edit_text(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."
            )
            return
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º VLESS URL –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        vless_url = await generate_user_vless_url(user)
        
        mobile_text = f"""
üì± <b>–ú–æ–±–∏–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã</b>

üîó <b>–í–∞—à–∞ VLESS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:</b>
<code>{vless_url}</code>

üì≤ <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∫–ª–∏–µ–Ω—Ç—ã:</b>

ü§ñ <b>Android:</b>
‚Ä¢ v2rayNG - https://play.google.com/store/apps/details?id=com.v2ray.ang
‚Ä¢ v2rayTun - https://play.google.com/store/apps/details?id=com.v2ray.tun

üçé <b>iOS:</b>
‚Ä¢ Shadowrocket - https://apps.apple.com/app/shadowrocket/id932747118
‚Ä¢ OneClick - https://apps.apple.com/app/oneclick/id1545555197

üìã <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</b>
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ VLESS —Å—Å—ã–ª–∫—É –≤—ã—à–µ
2. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à VPN –∫–ª–∏–µ–Ω—Ç
3. –ù–∞–∂–º–∏—Ç–µ "–ò–º–ø–æ—Ä—Ç" –∏–ª–∏ "+"
4. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É
5. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>
‚Ä¢ –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Å—Å—ã–ª–∫—É —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–∞—à–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {user.max_devices}
        """
        
        await callback.message.edit_text(mobile_text, reply_markup=get_url_keyboard())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ URL: {e}")
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

@router.callback_query(F.data == "get_desktop_url")
async def get_desktop_url(callback: CallbackQuery):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö URL"""
    try:
        user_id = callback.from_user.id
        user = await user_service.get_user_by_telegram_id(user_id)
        
        if not user:
            await callback.message.edit_text(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."
            )
            return
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º VLESS URL –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        vless_url = await generate_user_vless_url(user)
        
        desktop_text = f"""
üíª <b>–î–µ—Å–∫—Ç–æ–ø–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã</b>

üîó <b>–í–∞—à–∞ VLESS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:</b>
<code>{vless_url}</code>

üñ•Ô∏è <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∫–ª–∏–µ–Ω—Ç—ã:</b>

ü™ü <b>Windows:</b>
‚Ä¢ v2rayN - https://github.com/2dust/v2rayN
‚Ä¢ Clash for Windows - https://github.com/Fndroid/clash_for_windows_pkg
‚Ä¢ Qv2ray - https://github.com/Qv2ray/Qv2ray

üçé <b>macOS:</b>
‚Ä¢ ClashX - https://github.com/yichengchen/clashX
‚Ä¢ V2rayU - https://github.com/yanue/V2rayU
‚Ä¢ Qv2ray - https://github.com/Qv2ray/Qv2ray

üêß <b>Linux:</b>
‚Ä¢ Qv2ray - https://github.com/Qv2ray/Qv2ray
‚Ä¢ v2ray-core - https://github.com/v2fly/v2ray-core
‚Ä¢ Clash - https://github.com/Dreamacro/clash

üìã <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</b>
1. –°–∫–∞—á–∞–π—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è –≤–∞—à–µ–π –û–°
2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ VLESS —Å—Å—ã–ª–∫—É –≤—ã—à–µ
3. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –∫–ª–∏–µ–Ω—Ç
4. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>
‚Ä¢ –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Å—Å—ã–ª–∫—É —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–∞—à–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {user.max_devices}
        """
        
        await callback.message.edit_text(desktop_text, reply_markup=get_url_keyboard())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–≥–æ URL: {e}")
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

@router.callback_query(F.data == "get_config_file")
async def get_config_file(callback: CallbackQuery):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        user_id = callback.from_user.id
        user = await user_service.get_user_by_telegram_id(user_id)
        
        if not user:
            await callback.message.edit_text(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."
            )
            return
        
        config_text = f"""
üìÑ <b>–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</b>

üîó <b>–°–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:</b>
‚Ä¢ JSON –∫–æ–Ω—Ñ–∏–≥: https://xray-vpn-service-seven.vercel.app/api/config/{user.telegram_id}/json
‚Ä¢ VLESS —Å—Å—ã–ª–∫–∞: https://xray-vpn-service-seven.vercel.app/api/config/{user.telegram_id}/vless
‚Ä¢ QR –∫–æ–¥: https://xray-vpn-service-seven.vercel.app/api/config/{user.telegram_id}/qr

üì± <b>QR –∫–æ–¥ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö:</b>
‚Ä¢ –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR –∫–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º VPN –∫–ª–∏–µ–Ω—Ç–æ–≤

üîß <b>–†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞:</b>
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JSON –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
‚Ä¢ VLESS —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤

‚ö†Ô∏è <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</b>
‚Ä¢ –°—Å—ã–ª–∫–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
‚Ä¢ –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Å—Å—ã–ª–∫–∏ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º
‚Ä¢ –ü—Ä–∏ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω–∞ –∫–æ–º–ø—Ä–æ–º–µ—Ç–∞—Ü–∏—é –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
        """
        
        await callback.message.edit_text(config_text, reply_markup=get_url_keyboard())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

async def generate_user_vless_url(user) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è VLESS URL –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ VLESS URL
        # –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∏–º–µ—Ä
        server_ip = "89.188.113.58"  # IP –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        port = "443"
        uuid = "2227fcce-08c2-473f-87a1-4d9595972646"  # UUID –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        public_key = "-TL01QWTd3nVXR4qdfnAea5JgUcEzwa_qvpw9KGtTRc"  # Public key
        server_name = "www.microsoft.com"  # SNI –¥–æ–º–µ–Ω
        
        vless_url = f"vless://{uuid}@{server_ip}:{port}?encryption=none&security=reality&sni={server_name}&pbk={public_key}&fp=chrome&type=tcp&headerType=none&flow=#XrayVPN-{user.telegram_id}"
        
        return vless_url
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ VLESS URL: {e}")
        return "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"

@router.callback_query(F.data == "url_back")
async def url_back(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ URL –º–µ–Ω—é"""
    try:
        url_text = f"""
üîó <b>–ü–æ–ª—É—á–µ–Ω–∏–µ URL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</b>

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø URL –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –Ω—É–∂–µ–Ω:

üåê <b>–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:</b>
‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: https://xray-vpn-service-seven.vercel.app/
‚Ä¢ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://xray-vpn-service-seven.vercel.app/docs

üì± <b>–ú–æ–±–∏–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã:</b>
‚Ä¢ v2rayNG (Android)
‚Ä¢ Shadowrocket (iOS)
‚Ä¢ Clash (Windows/Mac)

üíª <b>–î–µ—Å–∫—Ç–æ–ø–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã:</b>
‚Ä¢ Qv2ray (Windows/Mac/Linux)
‚Ä¢ Clash for Windows
‚Ä¢ v2rayN (Windows)

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
        """
        
        await callback.message.edit_text(url_text, reply_markup=get_url_keyboard())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ URL –º–µ–Ω—é: {e}")
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
