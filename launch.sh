#!/bin/bash

# –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Xray VLESS + Reality —Å–µ—Ä–≤–∏—Å–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
show_header() {
    echo -e "${PURPLE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë           üöÄ Xray VLESS + Reality Service                   ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë              –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π VPN —Å–µ—Ä–≤–∏—Å                        ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë         –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–±—Ö–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –º–æ–±–∏–ª—å–Ω—ã—Ö            ‚ïë"
    echo "‚ïë                    –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –†–æ—Å—Å–∏–∏                         ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
check_system() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –û–°
    if [[ "$OSTYPE" != "linux-gnu"* ]]; then
        error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Linux"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
    if [[ $EUID -ne 0 ]]; then
        error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    arch=$(uname -m)
    if [[ "$arch" != "x86_64" ]]; then
        warn "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ $arch –º–æ–∂–µ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è"
    fi
    
    success "–°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
}

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞
show_menu() {
    echo -e "${CYAN}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                    –ú–ï–ù–Æ –ó–ê–ü–£–°–ö–ê                              ‚ïë"
    echo "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£"
    echo "‚ïë 1. üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞)            ‚ïë"
    echo "‚ïë 2. üîß –ü–æ—à–∞–≥–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞                                  ‚ïë"
    echo "‚ïë 3. üí≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º                           ‚ïë"
    echo "‚ïë 4. ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Bot                               ‚ïë"
    echo "‚ïë 5. üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞                              ‚ïë"
    echo "‚ïë 6. üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞                              ‚ïë"
    echo "‚ïë 7. üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏                                ‚ïë"
    echo "‚ïë 8. üìã –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤                                      ‚ïë"
    echo "‚ïë 9. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤                                  ‚ïë"
    echo "‚ïë 0. ‚ùå –í—ã—Ö–æ–¥                                                ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫
quick_start() {
    log "üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
    
    echo "–≠—Ç–æ—Ç —Ä–µ–∂–∏–º –≤—ã–ø–æ–ª–Ω–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É:"
    echo "1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    echo "2. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
    echo "3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π"
    echo "5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "6. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo ""
    
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " confirm
    
    if [[ "$confirm" == "y" || "$confirm" == "Y" ]]; then
        chmod +x scripts/quick-start.sh
        ./scripts/quick-start.sh
    else
        info "–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω"
    fi
}

# –ü–æ—à–∞–≥–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
step_by_step() {
    log "üîß –ü–æ—à–∞–≥–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞..."
    
    echo "–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ç–∞–ø –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    echo "1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    echo "2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    echo "3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
    echo "4. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo ""
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —ç—Ç–∞–ø–∞ (1-5): " step
    
    case $step in
        1)
            info "–≠—Ç–∞–ø 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
            apt update && apt upgrade -y
            apt install -y git curl wget jq python3 python3-pip
            success "–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞"
            ;;
        2)
            info "–≠—Ç–∞–ø 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            rm get-docker.sh
            curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
            success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            ;;
        3)
            info "–≠—Ç–∞–ø 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
            if [[ ! -d "/opt/xray-service" ]]; then
                read -p "–í–≤–µ–¥–∏—Ç–µ URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: " REPO_URL
                git clone "$REPO_URL" /opt/xray-service
            fi
            cd /opt/xray-service
            cp env.example .env
            info "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env: nano .env"
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞..."
            success "–ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            ;;
        4)
            info "–≠—Ç–∞–ø 4: –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
            cd /opt/xray-service
            python3 scripts/generate-reality-keys.py
            python3 scripts/init-database.py
            docker-compose up -d
            success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
            ;;
        5)
            info "–≠—Ç–∞–ø 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
            cd /opt/xray-service
            chmod +x scripts/*.sh
            ./scripts/setup-monitoring.sh
            success "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            ;;
        *)
            error "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —ç—Ç–∞–ø–∞"
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
setup_payments() {
    log "üí≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º..."
    
    chmod +x scripts/setup-payments.sh
    ./scripts/setup-payments.sh
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Bot
setup_telegram_bot() {
    log "ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Bot..."
    
    chmod +x scripts/setup-telegram-bot.sh
    ./scripts/setup-telegram-bot.sh
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test_services() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    chmod +x scripts/test-and-launch.sh
    ./scripts/test-and-launch.sh
}

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
show_monitoring() {
    log "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞..."
    
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥—ã:"
    echo "1. Grafana: http://$(curl -s ifconfig.me):3000"
    echo "2. Prometheus: http://$(curl -s ifconfig.me):9090"
    echo ""
    
    echo "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    cd /opt/xray-service
    docker-compose ps
    
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
    echo "CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}')"
    echo "Memory: $(free | grep Mem | awk '{printf "%.0f", $3/$2 * 100.0}')%"
    echo "Disk: $(df / | tail -1 | awk '{print $5}')"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
security_check() {
    log "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
    
    chmod +x scripts/security-audit.sh
    ./scripts/security-audit.sh
}

# –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
show_status() {
    log "üìã –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    cd /opt/xray-service
    
    echo "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
    docker-compose ps
    
    echo ""
    echo "Health checks:"
    
    services=(
        "Xray Manager:8080"
        "Telegram Bot:8001"
        "Payment Service:8002"
        "PostgreSQL:5432"
        "Redis:6379"
        "Grafana:3000"
        "Prometheus:9090"
    )
    
    for service in "${services[@]}"; do
        name=$(echo $service | cut -d: -f1)
        port=$(echo $service | cut -d: -f2)
        
        if curl -s -f "http://localhost:$port" > /dev/null 2>&1; then
            success "‚úÖ $name - OK"
        else
            error "‚ùå $name - FAIL"
        fi
    done
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
restart_services() {
    log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    cd /opt/xray-service
    
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    echo "1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å"
    echo "3. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): " choice
    
    case $choice in
        1)
            docker-compose restart
            success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
            ;;
        2)
            docker-compose ps
            read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–µ—Ä–≤–∏—Å–∞: " service_name
            docker-compose restart "$service_name"
            success "–°–µ—Ä–≤–∏—Å $service_name –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
            ;;
        3)
            docker-compose down
            success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            ;;
        4)
            docker-compose up -d
            success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
            ;;
        *)
            error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            ;;
    esac
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    show_header
    check_system
    
    while true; do
        show_menu
        read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (0-9): " choice
        
        case $choice in
            1)
                quick_start
                ;;
            2)
                step_by_step
                ;;
            3)
                setup_payments
                ;;
            4)
                setup_telegram_bot
                ;;
            5)
                test_services
                ;;
            6)
                show_monitoring
                ;;
            7)
                security_check
                ;;
            8)
                show_status
                ;;
            9)
                restart_services
                ;;
            0)
                log "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
                exit 0
                ;;
            *)
                error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
                ;;
        esac
        
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        clear
    done
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
